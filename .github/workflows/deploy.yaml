
name: Deploy to ECR

on: 
  push:
    branches: [ main ]

jobs:
  
  build_deploy:    
    name: Build and deploy image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get qa microservice name
      id: qa-values-name
      uses: jbutcher5/read-yaml@main
      with:
        file: './deployment/qa.yaml'         
        key-path: '["microservice", "name"]'  

    - name: Get qa microservice tag
      id: qa-values-tag
      uses: jbutcher5/read-yaml@main
      with:
        file: './deployment/qa.yaml'         
        key-path: '["microservice", "tag"]'  

    - name: Build, tag, and push qa image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ steps.qa-values-name.outputs.data }}
        IMAGE_TAG: ${{ steps.qa-values-tag.outputs.data }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to qa environment in Kubernetes
      id: deploy-k8s-qa
      uses: 'deliverybot/helm@v1'
      with:
        repo: https://stavco9.github.io/stav-devops-infra/helm
        repo-alias: stav-devops-helm
        release: 'stav-poc'
        namespace: 'flask-sample-qa'
        chart: 'flask-sample'
        value-files: 'deployment/qa.yaml'
      env:
        KUBECONFIG_FILE: '${{ secrets.K8S_KUBECONFIG_FLASK_SAMPLE_QA }}'

    - name: Notify Slack
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Github Actions
        SLACK_ICON: https://img.icons8.com/?size=50&id=3tC9EQumUAuq&format=png
        SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
        SLACK_TITLE: Pipeline has been failed !!
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: Try again...